{"version":3,"sources":["components/Person.js","components/PeopleTable.js","api/getPeople.js","App.js","index.js"],"names":["Person","_ref","person","selectedPersonId","onChangeSelectedPersonId","classes","classnames","PeopleTable__person--male","sex","PeopleTable__person--female","PeopleTable__person--selected","id","classesForName","PeopleTable__ageOver65","age","PeopleTable__bornBefore1650","born","PeopleTable__diedAfter1800","died","PeopleTable__father","father","childNames","children","map","childName","name","react_default","a","createElement","className","onClick","mother","century","join","PeopleTable","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","people","sortingFunc","Person_Person","React","Component","peopleArr","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","then","data","json","sent","abrupt","objectSpread2","Math","ceil","filter","child","stop","App","state","visiblePeople","sortedField","inputValue","getSortedPeople","sortBy","preparedInputValue","toLowerCase","toConsumableArray","includes","sort","b","localeCompare","_this","setState","handleChangeInput","event","target","personId","_this$state","type","onChange","PeopleTable_PeopleTable","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.4d67e1f8.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nexport const Person = ({ person, selectedPersonId, onChangeSelectedPersonId }) => {\n\n  const classes = classnames(\n    'Person',\n    {\n    'PeopleTable__person--male': person.sex === 'm',\n    'PeopleTable__person--female': person.sex === 'f',\n    'PeopleTable__person--selected': selectedPersonId === person.id\n    }\n  )\n\n  const classesForName = classnames({\n    'PeopleTable__ageOver65': person.age >= 65,\n    'PeopleTable__bornBefore1650': person.born < 1650,\n    'PeopleTable__diedAfter1800': person.died > 1800,\n    'PeopleTable__father': person.father\n  })\n\n  const childNames = person.children.map(childName => childName.name);\n\n  return (\n    <tr className = {classes}\n      onClick={() => onChangeSelectedPersonId(person.id)}>\n      <td>{person.id}</td>\n      <td className={classesForName}>{person.name}</td>\n      <td>{person.sex}</td>\n      <td>{person.age}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.mother}</td>\n      <td>{person.father}</td>\n      <td>{person.century}</td>\n      <td>{childNames.join(', ')}</td>\n    </tr>\n  )\n}\n","import React from 'react';\nimport { Person } from './Person';\n\nexport class PeopleTable extends React.Component {\n\n  render() {\n    const { people,\n            sortingFunc,\n            selectedPersonId,\n            onChangeSelectedPersonId } = this.props;\n\n    return (\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr>\n            <th><button onClick={() => sortingFunc('id')}>Id</button></th>\n            <th><button onClick={() => sortingFunc('name')}>Name</button></th>\n            <th><button onClick={() => sortingFunc('sex')}>Sex</button></th>\n            <th><button onClick={() => sortingFunc('age')}>Age</button></th>\n            <th><button onClick={() => sortingFunc('born')}>Born</button></th>\n            <th><button onClick={() => sortingFunc('died')}>Died</button></th>\n            <th><button onClick={() => sortingFunc('mother')}>Mother</button></th>\n            <th><button onClick={() => sortingFunc('father')}>Father</button></th>\n            <th><button onClick={() => sortingFunc('century')}>Century</button></th>\n            <th><button onClick={() => sortingFunc('children')}>Children</button></th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => (\n\n            <Person key={person.id}\n                    person={person}\n                    selectedPersonId={selectedPersonId}\n                    onChangeSelectedPersonId={onChangeSelectedPersonId} />\n\n          ))}\n        </tbody>\n      </table>\n    )\n  }\n}\n","const getPeople = () => fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n  .then(data => data.json());\n\nconst peopleArr = async() => {\n  const people = await getPeople()\n\n  return people.map((person, id) => ({\n    id: id + 1,\n    ...person,\n    age: person.died - person.born,\n    mother: person.mother ? person.mother : '-',\n    father: person.father ? person.father : '-',\n    century: Math.ceil(person.died / 100),\n    children: people.filter(\n      child => child.mother === person.name ||\n               child.father === person.name)\n  }));\n\n};\nexport default peopleArr;\n","import React from 'react';\nimport './App.css';\nimport { PeopleTable } from './components/PeopleTable';\nimport peopleArr from './api/getPeople';\n\nclass App extends React.Component {\n  people = [];\n\n  state = {\n    visiblePeople: [],\n    sortedField: '',\n    selectedPersonId: null,\n    inputValue: ''\n  }\n\n  async componentDidMount() {\n    this.people = await peopleArr();\n\n    this.setState({\n      visiblePeople: this.people\n    });\n  }\n\n  getSortedPeople = (people, sortBy, inputValue) => {\n    const preparedInputValue = inputValue.toLowerCase();\n    return [...people]\n\n      .filter(person => person.name.toLowerCase().includes(preparedInputValue)\n      || person.mother.toLowerCase().includes(preparedInputValue)\n      || person.father.toLowerCase().includes(preparedInputValue)\n      || person.children.toLowerCase().includes(preparedInputValue))\n\n      .sort((a, b) => {\n        switch (typeof a[sortBy]) {\n          case 'string':\n            return a[sortBy].localeCompare(b[sortBy]);\n\n          case 'boolean' && 'number':\n            return a[sortBy] - b[sortBy];\n\n          default:\n            return 0;\n        }\n      });\n  }\n\n  sortingFunc = (sortBy) => {\n    this.setState(() => ({\n      sortedField: sortBy,\n      visiblePeople: this.getSortedPeople(this.people, sortBy, this.state.inputValue)\n    }));\n  }\n\n  handleChangeInput = (event) => {\n    const inputValue = event.target.value;\n    this.setState(({ sortBy }) => ({\n      inputValue,\n      visiblePeople: this.getSortedPeople(this.people, sortBy, inputValue)\n    }))\n  }\n\n  onChangeSelectedPersonId = (personId) => {\n    this.setState({selectedPersonId: personId})\n  }\n\n  render() {\n    const { visiblePeople, inputValue, selectedPersonId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>People table</h1>\n\n        <input type=\"text\"\n          className=\"filteringInput\"\n          value={inputValue}\n          onChange={this.handleChangeInput} />\n\n        <PeopleTable people={visiblePeople}\n                    sortingFunc={this.sortingFunc}\n                    selectedPersonId={selectedPersonId}\n                    onChangeSelectedPersonId={this.onChangeSelectedPersonId} />\n\n      </div>\n    )\n  }\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}